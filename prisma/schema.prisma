// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider     = "mysql"
    url          = env("DATABASE_URL")
    relationMode = "prisma"
}

model User {
    id              Int      @id @default(autoincrement())
    email           String   @unique
    password        String
    phoneNumber     String   @unique
    firstName       String
    lastName        String
    additionalEmail String?  @unique
    middleName      String?
    arabicFullName  String?
    appointlet      String?
    bio             String?
    gsStatus        GsStatus @default(ACTIVE)
    joinDate        DateTime @default(now())
    positionId      Int
    position        Position @relation(fields: [positionId], references: [id])
    Task            Task[]

    @@index([positionId])
}

model Squad {
    id          Int        @id @default(autoincrement())
    name        String
    gsName      String
    description String
    imageUrl    String
    positions   Position[]
    board      Board?
}

model Position {
    id             Int     @id @default(autoincrement())
    name           String
    gsName         String
    jobDescription String
    weeklyHours    Int
    gsLevel        GsLevel
    squadId        Int
    squad          Squad   @relation(fields: [squadId], references: [id])
    users          User[]

    @@index([squadId])
}

model Board {
    id       Int                @id @default(autoincrement())
    squadId  Int                @unique
    squad    Squad              @relation(fields: [squadId], references: [id])
    statuses BoardsOnStatuses[]

    @@index([squadId])
}

model Status {
    id     Int                @id @default(autoincrement())
    name   String
    boards BoardsOnStatuses[]
}

model BoardsOnStatuses {
    boardId  Int
    board    Board  @relation(fields: [boardId], references: [id])
    statusId Int
    status   Status @relation(fields: [statusId], references: [id])

    @@id([boardId, statusId])
    @@index([boardId])
    @@index([statusId])
}
model Task {
    id           Int        @id @default(autoincrement())
    title        String
    description  String
    url          String?
    deadline     DateTime
    priority     Priority   @default(NORMAL)
    difficulty   Difficulty @default(MEDIUM)
    assignedById Int
    assignedBy   User       @relation(fields: [assignedById], references: [id])

    @@index([assignedById])
}

enum GsLevel {
    INTERN
    COORDINATOR
    SPECIALIST
    VETERAN
    REPRESENTATIVE
    ORCHESTRATOR
}

enum GsStatus {
    ACTIVE
    FREEZE
    LEFT
}

enum Difficulty {
    LOW
    MEDIUM
    HIGH
    // TODO: Map each difficulty to a number value.
}

enum Priority {
    NORMAL
    IMPORTANT
    URGENT
}
